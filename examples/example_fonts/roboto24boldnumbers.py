# Code generated by modified font_to_py.py.
# Font: Roboto-Bold.ttf Char set:  +-.0123456789BCHKMiz°
# Cmd: ./font_to_py.py -c  0123456789+-.°CKiBMHz Roboto-Bold.ttf 24 roboto24boldnumbers.py
version = '1'

height = const(24)

baseline = const(24)

max_width = const(27)

hmap = const(True)

reverse = const(False)

monospaced = const(False)

min_ch = const(32)

max_ch = const(176)

_font =\
b'\x0f\x00\x00\x00\x00\x00\x0f\xe0\x3f\xf0\x7f\xf8\x7f\xfc\x7c\x7c'\
b'\xf8\x3c\x00\x3c\x00\x7c\x00\xf8\x01\xf8\x03\xf0\x03\xc0\x07\xc0'\
b'\x07\x80\x07\x80\x00\x00\x00\x00\x03\x80\x07\x80\x07\x80\x07\xc0'\
b'\x07\x80\x00\x00\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xe0\x00\x03'\
b'\xe0\x00\x03\xe0\x00\x03\xe0\x00\x03\xe0\x00\x03\xe0\x00\x7f\xff'\
b'\x00\x7f\xff\x00\x7f\xff\x00\x7f\xff\x00\x03\xe0\x00\x03\xe0\x00'\
b'\x03\xe0\x00\x03\xe0\x00\x03\xe0\x00\x03\xe0\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x3f\xc0\x3f\xc0\x3f\xc0\x3f\xc0\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x09\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x1c\x00\x3e\x00\x3e\x00\x3e\x00'\
b'\x1c\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\xf0\x00\x0f\xfc\x00\x1f\xfe\x00\x1f\xfe\x00\x3e\x1f\x00\x3c'\
b'\x1f\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f'\
b'\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f\x00\x3c\x0f\x00'\
b'\x3c\x1f\x00\x3e\x1f\x00\x1f\xfe\x00\x1f\xfe\x00\x0f\xfc\x00\x03'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x30\x00\x01\xf0\x00\x0f\xf0\x00\x1f\xf0\x00\x1f\xf0\x00\x1e'\
b'\xf0\x00\x10\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0'\
b'\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00'\
b'\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00\xf0\x00\x00'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\xf0\x00\x0f\xfc\x00\x1f\xfe\x00\x3f\xfe\x00\x3e\x3f\x00\x7c'\
b'\x1f\x00\x7c\x0f\x00\x00\x1f\x00\x00\x1f\x00\x00\x1e\x00\x00\x3e'\
b'\x00\x00\x7c\x00\x00\xf8\x00\x01\xf0\x00\x03\xe0\x00\x07\xc0\x00'\
b'\x0f\x80\x00\x1f\x00\x00\x3f\xff\x80\x3f\xff\x80\x3f\xff\x80\x3f'\
b'\xff\x80\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\xf0\x00\x0f\xfc\x00\x1f\xfe\x00\x3f\xfe\x00\x7e\x1f\x00\x7c'\
b'\x1f\x00\x00\x0f\x00\x00\x1f\x00\x00\x1e\x00\x03\xfe\x00\x03\xf8'\
b'\x00\x03\xfc\x00\x03\xfe\x00\x00\x1f\x00\x00\x0f\x00\x00\x0f\x00'\
b'\x7c\x0f\x00\x7e\x1f\x00\x3f\xff\x00\x3f\xfe\x00\x1f\xfc\x00\x07'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x3c\x00\x00\x7c\x00\x00\xfc\x00\x00\xfc\x00\x01\xfc\x00\x01'\
b'\xfc\x00\x03\xfc\x00\x07\xbc\x00\x07\xbc\x00\x0f\x3c\x00\x0e\x3c'\
b'\x00\x1e\x3c\x00\x3c\x3c\x00\x3c\x3c\x00\x7f\xff\x80\x7f\xff\x80'\
b'\x7f\xff\x80\x7f\xff\x80\x00\x3c\x00\x00\x3c\x00\x00\x3c\x00\x00'\
b'\x3c\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x1f\xff\x00\x1f\xff\x00\x1f\xff\x00\x1f\xff\x00\x1e\x00\x00\x1e'\
b'\x00\x00\x1e\x00\x00\x1e\xf8\x00\x1f\xfc\x00\x3f\xfe\x00\x3f\xff'\
b'\x00\x1e\x1f\x00\x00\x0f\x00\x00\x0f\x80\x00\x0f\x80\x3c\x0f\x80'\
b'\x3c\x0f\x00\x3e\x1f\x00\x1f\xff\x00\x1f\xfe\x00\x0f\xfc\x00\x03'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x78\x00\x01\xf8\x00\x07\xf8\x00\x0f\xf8\x00\x0f\xc0\x00\x1f'\
b'\x00\x00\x1e\x00\x00\x3c\xf8\x00\x3f\xfe\x00\x3f\xfe\x00\x3f\xff'\
b'\x00\x3e\x1f\x00\x3c\x0f\x80\x3c\x0f\x80\x3c\x0f\x80\x3c\x0f\x80'\
b'\x3e\x0f\x80\x3f\x1f\x00\x1f\xff\x00\x0f\xfe\x00\x07\xfc\x00\x03'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x7f\xff\x00\x7f\xff\x00\x7f\xff\x00\x7f\xff\x00\x00\x0f\x00\x00'\
b'\x1e\x00\x00\x1e\x00\x00\x3c\x00\x00\x3c\x00\x00\x7c\x00\x00\x78'\
b'\x00\x00\xf8\x00\x00\xf0\x00\x01\xf0\x00\x01\xe0\x00\x03\xe0\x00'\
b'\x03\xc0\x00\x07\xc0\x00\x07\xc0\x00\x07\x80\x00\x0f\x80\x00\x1f'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\xf0\x00\x0f\xfc\x00\x1f\xfe\x00\x1f\xfe\x00\x3e\x1f\x00\x3e'\
b'\x1f\x00\x3c\x0f\x00\x3e\x1f\x00\x1e\x1e\x00\x1f\xfe\x00\x0f\xfc'\
b'\x00\x0f\xfc\x00\x1f\xfe\x00\x3e\x1f\x00\x3c\x0f\x00\x3c\x0f\x00'\
b'\x3c\x0f\x00\x3e\x1f\x00\x3f\xff\x00\x1f\xfe\x00\x0f\xfc\x00\x03'\
b'\xf0\x00\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00'\
b'\x03\xf0\x00\x0f\xf8\x00\x1f\xfc\x00\x3f\xfe\x00\x3e\x3e\x00\x3c'\
b'\x1f\x00\x7c\x0f\x00\x7c\x0f\x00\x7c\x0f\x00\x3c\x0f\x00\x3e\x1f'\
b'\x00\x3f\xff\x00\x1f\xff\x00\x0f\xff\x00\x07\xcf\x00\x00\x1e\x00'\
b'\x00\x3e\x00\x00\x7c\x00\x07\xfc\x00\x07\xf8\x00\x07\xe0\x00\x07'\
b'\x80\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x0f\xe0'\
b'\x3f\xf0\x7f\xf8\x7f\xfc\x7c\x7c\xf8\x3c\x00\x3c\x00\x7c\x00\xf8'\
b'\x01\xf8\x03\xf0\x03\xc0\x07\xc0\x07\x80\x07\x80\x00\x00\x00\x00'\
b'\x03\x80\x07\x80\x07\x80\x07\xc0\x07\x80\x00\x00\x00\x00\x00\x00'\
b'\x14\x00\x00\x00\x00\x00\x00\x00\x3f\xfc\x00\x3f\xff\x00\x3f\xff'\
b'\x80\x3f\xff\x80\x3e\x0f\xc0\x3e\x07\xc0\x3e\x07\xc0\x3e\x07\xc0'\
b'\x3e\x0f\x80\x3f\xff\x80\x3f\xfe\x00\x3f\xff\x00\x3f\xff\x80\x3e'\
b'\x07\xc0\x3e\x03\xc0\x3e\x03\xc0\x3e\x03\xc0\x3e\x07\xc0\x3f\xff'\
b'\xc0\x3f\xff\x80\x3f\xff\x00\x3f\xfc\x00\x00\x00\x00\x00\x00\x00'\
b'\x14\x00\x00\x00\x00\x00\x00\x00\x01\xfc\x00\x07\xff\x00\x0f\xff'\
b'\x80\x1f\xff\xc0\x1f\x07\xc0\x3e\x03\xe0\x3e\x01\xe0\x3c\x01\xe0'\
b'\x7c\x00\x00\x7c\x00\x00\x7c\x00\x00\x7c\x00\x00\x7c\x00\x00\x7c'\
b'\x00\x00\x3c\x01\xe0\x3c\x01\xe0\x3e\x03\xe0\x1f\x07\xe0\x1f\xff'\
b'\xc0\x0f\xff\x80\x07\xff\x00\x01\xfc\x00\x00\x00\x00\x00\x00\x00'\
b'\x16\x00\x00\x00\x00\x00\x00\x00\x3e\x01\xf0\x3e\x01\xf0\x3e\x01'\
b'\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0'\
b'\x3e\x01\xf0\x3f\xff\xf0\x3f\xff\xf0\x3f\xff\xf0\x3f\xff\xf0\x3e'\
b'\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01'\
b'\xf0\x3e\x01\xf0\x3e\x01\xf0\x3e\x01\xf0\x00\x00\x00\x00\x00\x00'\
b'\x14\x00\x00\x00\x00\x00\x00\x00\x3e\x03\xf0\x3e\x07\xe0\x3e\x0f'\
b'\xc0\x3e\x0f\x80\x3e\x1f\x00\x3e\x3e\x00\x3e\x7e\x00\x3e\xfc\x00'\
b'\x3e\xf8\x00\x3f\xf0\x00\x3f\xf0\x00\x3f\xf8\x00\x3f\xfc\x00\x3f'\
b'\xfc\x00\x3f\x3e\x00\x3e\x3f\x00\x3e\x1f\x00\x3e\x0f\x80\x3e\x0f'\
b'\xc0\x3e\x07\xc0\x3e\x03\xe0\x3e\x03\xf0\x00\x00\x00\x00\x00\x00'\
b'\x1b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f\x00\x1f\x80\x3f\x00'\
b'\x1f\x80\x3f\x80\x3f\x80\x3f\x80\x3f\x80\x3f\x80\x3f\x80\x3f\xc0'\
b'\x7f\x80\x3f\xc0\x7f\x80\x3d\xe0\x77\x80\x3d\xe0\xf7\x80\x3d\xe0'\
b'\xf7\x80\x3c\xf1\xe7\x80\x3c\xf1\xe7\x80\x3c\x71\xe7\x80\x3c\x7b'\
b'\xc7\x80\x3c\x7b\xc7\x80\x3c\x3b\x87\x80\x3e\x3f\x87\x80\x3e\x3f'\
b'\x87\x80\x3e\x1f\x07\x80\x3e\x1f\x07\x80\x3e\x1f\x07\x80\x3e\x0e'\
b'\x07\x80\x00\x00\x00\x00\x00\x00\x08\x00\x3c\x3c\x3c\x3c\x3c\x00'\
b'\x00\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c\x3c'\
b'\x3c\x3c\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x7f\xfc\x7f\xfc\x7f\xfc\x7f\xfc'\
b'\x00\xf8\x00\xf0\x01\xf0\x03\xe0\x07\xc0\x07\x80\x0f\x80\x1f\x00'\
b'\x3e\x00\x7f\xfe\x7f\xfe\x7f\xfe\x7f\xfe\x00\x00\x00\x00\x00\x00'\
b'\x0c\x00\x00\x00\x00\x00\x0f\x00\x1f\x80\x39\xc0\x30\xc0\x30\xc0'\
b'\x39\xc0\x1f\x80\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00'

_sparse =\
b'\x20\x00\x07\x00\x2b\x00\x0b\x00\x2d\x00\x15\x00\x2e\x00\x1c\x00'\
b'\x30\x00\x23\x00\x31\x00\x2d\x00\x32\x00\x37\x00\x33\x00\x41\x00'\
b'\x34\x00\x4b\x00\x35\x00\x55\x00\x36\x00\x5f\x00\x37\x00\x69\x00'\
b'\x38\x00\x73\x00\x39\x00\x7d\x00\x3f\x00\x87\x00\x42\x00\x8e\x00'\
b'\x43\x00\x98\x00\x48\x00\xa2\x00\x4b\x00\xac\x00\x4d\x00\xb6\x00'\
b'\x69\x00\xc3\x00\x7a\x00\xc7\x00\xb0\x00\xce\x00'

_mvfont = memoryview(_font)
_mvsp = memoryview(_sparse)
ifb = lambda l : l[0] | (l[1] << 8)

def bs(lst, val):
    while True:
        m = (len(lst) & ~ 7) >> 1
        v = ifb(lst[m:])
        if v == val:
            return ifb(lst[m + 2:])
        if not m:
            return 0
        lst = lst[m:] if v < val else lst[:m]

def get_ch(ch):
    doff = bs(_mvsp, ord(ch)) << 3
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 24
    return _mvfont[doff + 2:next_offs], 24, width

